@startuml

left to right direction

title UC3 - Diagrama de Classes \n

Class Plataforma <<Singleton>> {
    -String designacao
    -AlgoritmoGeradorPasswords agp
    -UsersAPI uapi
    -RepositorioColaborador repoColab
    -RepositorioOrganizacao repoOrg
    -RepositorioCompetenciaTecnica repoCompTec
    -RepositorioAreaAtividade repoAreaAtiv
    -RepositorioUtilizador repoUser
    -RepositorioTarefa repoTarefa
    -RepositorioCategoriaTarefa repoCategoriaTarefa

    +getInstance
    +getRepoAreaAtiv()
    +getRepoCompTec()
    +getRepoCategoriaTarefa()
    +getRepoColab()
    +getRepoOrg()
    +getRepoUser()
    +getRepoTarefa()
    +getUsersAPI()
    +guardarDados()
    +carregarDados()
    -resetUserAPI()
}

Class PlataformaController {
    +getAreasAtividade()
    +getGrausProficiencia()
    +getCategoriasTarefa()
    +getCompetenciasTecnicasByAreaAtividade(AreaAtividade areaAtividade)
    +resetUserAPI
    +getAreaATividadeToStringCompletoByCodigoUnico(String codigoUnico)
    +getCategoriaTarefaToStringCompletoByNome(String nome)
    +getColaboradorToStringCompletoByEmail(String email)
    +getCompetenciaTecnicaToStringCompletoByCodigoUnico(String codigoUnico)
    +getOrganizacaoToStringCompletoByEmail(String email)
    +getTarefaToStringCompletoByCodigoUnico(String codigoUnico)
}

Class CompetenciaTecnica {
    -CodigoUnico codigoUnico
    -String descricao
    -String descDetalhada
    -AreaAtividade areaAtividade
}

Class AreaAdministrativoUI {
}

Class DefinirCategoriaTarefaController {
    +definirCategoriaTarefa(String descricao, Area Atividade areaAtividade, List<CaracterizacaoCT> competenciasTecnicas)
}

Class CategoriaTarefa {
    -String descricao
    -AreaAtividade areaAtividade
    -List<CaracterizacaoCompTec> competenciasTecnicas
}

Class CaracterizacaoCompTec {
    -boolean caracter
    -GrauProficiencia grau
    -CompetenciaTecnica competenciaTecnica
}


Class RepositorioAreaAtividade <<Singleton>> {
    +listarAreasAtividade()
    +getAreaAtividadeByCodUnico(CodigoUnico codigoUnico)
    +criarAreaAtividade(String codigoUnico, String descricao, String descricaoDetalhada)
    +addAreaAtividade(AreaAtividade areaAtividade)
}

Class RepositorioCompetenciaTecnica <<Singleton>> {
    +getCompetenciasTecnicasByAreaAtividade(AreaAtividade areaAtividade)
    +addCompetenciaTecnica(CompetenciaTecnica competenciaTecnica)
    +getCompetenciaTecnicaByCodUnico(CodigoUnico codigoUnico)
    +criarCompetenciaTecnica(String codigoUnico, AreaAtividade areaAtividade, String descricao, String descDetalhada)
    +listaCompetenciasTecnica()
                                                
}

Class RepositorioCategoriaTarefa <<Singleton>> {
    +criarCategoriaTarefa(String descricao, Area Atividade areaAtividade, List<CaracterizacaoCT> competenciasTecnicas)
    +addCategoriaTarefa(CategoriaTarefa categoriaTarefa)
    +getCategoriaTarefaByDescricao(String descricao)
    +listarCategoriasTarefa()
}

Enum GrauProficiencia

AreaAdministrativoUI .> DefinirCategoriaTarefaController
AreaAdministrativoUI .> PlataformaController

PlataformaController .> RepositorioAreaAtividade
PlataformaController .> RepositorioCompetenciaTecnica
PlataformaController .> Plataforma
PlataformaController .> GrauProficiencia

DefinirCategoriaTarefaController .> Plataforma
DefinirCategoriaTarefaController .> RepositorioCategoriaTarefa
DefinirCategoriaTarefaController .> CategoriaTarefa

Plataforma "1" -down-> "1" RepositorioAreaAtividade: tem
Plataforma "1" -down-> "1" RepositorioCompetenciaTecnica: tem
Plataforma "1" -down-> "1" RepositorioCategoriaTarefa: tem

RepositorioCategoriaTarefa "1" -> "*" CategoriaTarefa: possui
RepositorioCategoriaTarefa .> CategoriaTarefa
RepositorioAreaAtividade "1" -> "*" AreaAtividade: possui
RepositorioCompetenciaTecnica "1" -> "*" CompetenciaTecnica: possui

CategoriaTarefa "1" -> "*" CaracterizacaoCompTec: possui
CaracterizacaoCompTec "1" -> GrauProficiencia: relaciona-se com
CaracterizacaoCompTec "1" -> CompetenciaTecnica: relaciona-se com

@enduml